module
  
  $ 
    var md = {
        Name: 'Post',
        name: 'post',
        descr: 'Blog post',
        prefix: 'post',
        query: [
            { name: 'owner', type: 'string' },
            { name: 'name', type: 'string' },
        ],
        fields: [
            { name: 'owner', type: 'string' },
            { name: 'name', type: 'string' },
            { name: 'title', type: 'string' },
            { name: 'content', type: 'string' },
            { name: 'state', type: 'string' },
            { name: 'pubblished_at', type: 'date' },
        ],
        created_at: true,
        updated_at: true,
        update_delete_by_id: true
    }

  $ 
    var values = [];
    var fields = [];
    for (var i=0; i<tb.tables[0].fields.length; i++) {
      fields.push (tb.tables[0].fields[i].name);
      values.push ('$'+(i+1)); 
    }

  # 'INSERT INTO users (name, email) VALUES ($1, $2) RETURNING *'
  function create
    _ pool.query
        $$ @ '${sql_insert.join('')}'
        @ 'INSERT ${fields.join(', ')} INTO ${md.name} VALUES (${values.join(', ')}) RETURNING *'
        
        [ 
            @ name
            @ email
        => 
            param error
            param results
            if error
                throw error
            _ response.status(201).send
                `lit 
                    + User added with ID:&nbsp;
                    @ results.rows[0].id
                    + 

    var i = 0
